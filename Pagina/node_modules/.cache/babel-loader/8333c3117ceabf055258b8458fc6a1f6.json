{"ast":null,"code":"//Importamos los Enumeradores de constantes \nimport Enum from\"./Enum\";/**\n * Función que consume el servicio que retorna el listado de los productos \n * @param {*} dispatch Dispatch para la gestión del store\n * @param {*} textFind Valor buscado \n */function getProducts(dispatch,textFind){apiCall(Enum.routes.UrlItems+textFind,dispatch,\"setProducts\");}/**\n * Funcion que consume el servicio que retorna la información de un producto\n * @param {*} dispatch Dispatch para la gestión del store\n * @param {*} idFind id del producto a buscar \n */function getProduct(dispatch,idFind){apiCall(Enum.routes.UrlItem+idFind,dispatch,\"setProduct\");}/**\n * Fucion para el llamado a API Rest \n * @param {*} queryUrl Ruta del EndPoint a consumir\n * @param {*} dispatch Funcion dispatch que se dispara con el resultado retornado por el Api Rest \n * @param {*} type Indica al dispatch cual es la gestión a realizar dentro del store\n */function apiCall(queryUrl,dispatch,type){fetch(queryUrl).then(function(data){return data.json();}).then(function(data){dispatch({type:type,data:data});}).catch(function(error){console.log(Enum.error.err1+error);});}/**\n* Retorna un objeto con las instancias a las funciones del componente DAO\n**/var DAO={getProducts:getProducts,getProduct:getProduct};export default DAO;","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/test_ml/src/components/Dao.js"],"names":["Enum","getProducts","dispatch","textFind","apiCall","routes","UrlItems","getProduct","idFind","UrlItem","queryUrl","type","fetch","then","data","json","catch","error","console","log","err1","DAO"],"mappings":"AACA;AACA,MAAOA,CAAAA,IAAP,KAAiB,QAAjB,CAEA;;;;GAKA,QAASC,CAAAA,WAAT,CAAqBC,QAArB,CAA+BC,QAA/B,CAAwC,CACpCC,OAAO,CAACJ,IAAI,CAACK,MAAL,CAAYC,QAAZ,CAAqBH,QAAtB,CAAgCD,QAAhC,CAA0C,aAA1C,CAAP,CACH,CAED;;;;GAKA,QAASK,CAAAA,UAAT,CAAoBL,QAApB,CAA8BM,MAA9B,CAAqC,CACjCJ,OAAO,CAACJ,IAAI,CAACK,MAAL,CAAYI,OAAZ,CAAoBD,MAArB,CAA6BN,QAA7B,CAAuC,YAAvC,CAAP,CACH,CAED;;;;;GAMA,QAASE,CAAAA,OAAT,CAAiBM,QAAjB,CAA2BR,QAA3B,CAAqCS,IAArC,CAA0C,CACtCC,KAAK,CAACF,QAAD,CAAL,CACCG,IADD,CACM,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,IAAL,EAAJ,EADV,EAECF,IAFD,CAEM,SAAAC,IAAI,CAAI,CAAEZ,QAAQ,CAAC,CAAES,IAAI,CAAJA,IAAF,CAAQG,IAAI,CAAJA,IAAR,CAAD,CAAR,CAAyB,CAFzC,EAGCE,KAHD,CAGO,SAAUC,KAAV,CAAiB,CAACC,OAAO,CAACC,GAAR,CAAanB,IAAI,CAACiB,KAAL,CAAWG,IAAX,CAAkBH,KAA/B,EAAuC,CAHhE,EAIH,CAED;;GAGA,GAAMI,CAAAA,GAAG,CAAG,CAAEpB,WAAW,CAAXA,WAAF,CAAeM,UAAU,CAAVA,UAAf,CAAZ,CAEA,cAAec,CAAAA,GAAf","sourcesContent":["\n//Importamos los Enumeradores de constantes \nimport Enum from \"./Enum\";\n\n/**\n * Función que consume el servicio que retorna el listado de los productos \n * @param {*} dispatch Dispatch para la gestión del store\n * @param {*} textFind Valor buscado \n */\nfunction getProducts(dispatch, textFind){\n    apiCall(Enum.routes.UrlItems+textFind, dispatch, \"setProducts\");\n}\n\n/**\n * Funcion que consume el servicio que retorna la información de un producto\n * @param {*} dispatch Dispatch para la gestión del store\n * @param {*} idFind id del producto a buscar \n */\nfunction getProduct(dispatch, idFind){\n    apiCall(Enum.routes.UrlItem+idFind, dispatch, \"setProduct\");\n}\n\n/**\n * Fucion para el llamado a API Rest \n * @param {*} queryUrl Ruta del EndPoint a consumir\n * @param {*} dispatch Funcion dispatch que se dispara con el resultado retornado por el Api Rest \n * @param {*} type Indica al dispatch cual es la gestión a realizar dentro del store\n */\nfunction apiCall(queryUrl, dispatch, type){\n    fetch(queryUrl)\n    .then(data => data.json())\n    .then(data => { dispatch({ type, data}) })\n    .catch(function (error) {console.log( Enum.error.err1 + error);}); \n}\n\n/**\n* Retorna un objeto con las instancias a las funciones del componente DAO\n**/\nconst DAO = { getProducts, getProduct }\n\nexport default DAO;"]},"metadata":{},"sourceType":"module"}