{"ast":null,"code":"import _classCallCheck from\"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/test_ml/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/test_ml/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/test_ml/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/test_ml/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/test_ml/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{CardBody,CardImg,Row,Col,Container}from'reactstrap';import Header from'./Header';import Breadcrumbs from'./Breadcrumbs';import Footer from'./Footer';import Shipping from\"../assets/images/ic_shipping.png\";import CurrencyFormat from'react-currency-format';import{connect}from'react-redux';/**\n * Clase del componente ProductList \n * Encargada de gestional la visiualización del listado de productos \n */var ProductList=/*#__PURE__*/function(_Component){_inherits(ProductList,_Component);var _super=_createSuper(ProductList);/**\n\t * Constructor\n\t */function ProductList(props){var _this;_classCallCheck(this,ProductList);_this=_super.call(this,props);//Asignamos la funcion CardProduct con el contexto de la clase \n_this.cardProduct=_this.cardProduct.bind(_assertThisInitialized(_this));return _this;}/**\n\t * Funcion que es llamada para redireccionar a la ruta que carga el componente de\n\t * descripción del producto\n\t * @param {*} id El id del producto con el cual se podra cosumir la informacion del producto\n\t */_createClass(ProductList,[{key:\"productCall\",value:function productCall(id){//Llamamos al distpach que limpia objeto del store que tiene información del producto\n//Eso se realiza para evitar que se muestre por unos segundos la información de un producto\n//de un producto anteriormente cargado\nthis.props.clearProducts(\"cItem\");//Redireccionamos a la ruta /items/ con el id del producto \nthis.props.history.push({pathname:'/items/'+id});}/**\n\t * Funcion que construye dinamicamente cada uno de los productos de la busqueda \n\t * esta es llamada cada vez que el objeto del store es modificado con un uno listado de productos\n\t * @param {*} obj Objeto del store\n\t */},{key:\"cardProduct\",value:function cardProduct(obj){//Definimos un objeto para concatenar los productos \nvar products=[];//Asignamos instancia a la funcion que redirecciona a la pagina de producto, esto con el contexto de la clase\nvar productCall=this.productCall.bind(this);//Verificamos si hay productos en el objeto actualizado del store\nif(obj.query.items&&obj.query.items.length>0){//Asignamos el contenido de los items retornados \nvar result=obj.query.items;//Definimos los tamaños y posiciones que se utlizaran en la maquetación \nvar pos={img:{size:2,offset:1},state:{size:2},desc:{size:6},line:{size:10,offset:1}};//Definimos variables que seran utilizadas y recalculadas en cada uno de los items \nvar price;var freeShipping;//Recorremos todos los items de productos retornados\nresult.forEach(function(val){//Calculamos el precio redondeando este evitando decimales \nprice=Math.round(val.price.amount,-1);//En la variable cargamos la imagen de freeshipping si esta es verdadera\nfreeShipping=val.free_shipping?/*#__PURE__*/React.createElement(\"div\",{className:\"shipping\"},/*#__PURE__*/React.createElement(CardImg,{width:\"100%\",src:Shipping})):\"\";//Asignamos al objeto el item con los valores del store\nproducts.push(/*#__PURE__*/React.createElement(\"div\",{key:val.id},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:pos.img,className:\"prodLCol1\"},/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(\"img\",{src:val.picture,className:\"mx-auto d-block\",alt:val.title,onClick:function onClick(){return productCall(val.id);}}))),/*#__PURE__*/React.createElement(Col,{md:pos.desc,className:\"prodLCol2\"},/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(\"div\",{className:\"price\",onClick:function onClick(){return productCall(val.id);}},/*#__PURE__*/React.createElement(CurrencyFormat,{value:price,displayType:'text',thousandSeparator:\".\",decimalSeparator:\",\",prefix:'$ ',renderText:function renderText(value){return value;}}),freeShipping),/*#__PURE__*/React.createElement(\"div\",{className:\"info\"},/*#__PURE__*/React.createElement(\"div\",{className:\"title\"},val.title),/*#__PURE__*/React.createElement(\"div\",{className:\"condition\"},val.condition)))),/*#__PURE__*/React.createElement(Col,{md:pos.state,className:\"prodLCol3\"},/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(\"div\",{className:\"state\"},val.state)))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:pos.line},/*#__PURE__*/React.createElement(Container,{fluid:true,className:\"bg-white\"},/*#__PURE__*/React.createElement(\"div\",{className:\"line\"}))))));});}else{//Si no hay items retornados en la consulta cargamos un contenedor por defecto en blanco\nproducts.push(/*#__PURE__*/React.createElement(Row,{key:\"0\",className:\"prodNull\"},/*#__PURE__*/React.createElement(Col,{className:\"h-100 d-table no-gutter\"})));}//Retornamos todos los productos concatenados \nreturn products;}//Renderizamos el resultado del componente, este componente consume los siguientes compoentes externos\n//Header: Compoente que se encarga del buscargdor, pasamos los props ya que seran utilizados \n//BreadCrumbs: Se encarga de la miga de pan aunque en este test se visializa un dumy \n//Footer: Componente que se encarga del pie de la pagina \n//Para renderizar los productos utilizamos la llamada a la funcion cardProduct la cual esta definida en el\n//constructor con el contexto, esta al tener la referencia al objeto store hara que cada vez que se actualiza\n//el store dispare la llamada al metodo, generando un nuevo renderizado. \n},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(Container,{fluid:true,className:\"p-0 bg-light\"},/*#__PURE__*/React.createElement(Header,this.props),/*#__PURE__*/React.createElement(Breadcrumbs,null),/*#__PURE__*/React.createElement(CardBody,null,this.cardProduct(this.props.obj)),/*#__PURE__*/React.createElement(Footer,null));}}]);return ProductList;}(Component);//Funcion que conecta al store a travez del reducer \n//obj es cargado a las props y permite acceder a los datos gestionados por el distpacher ReducerSearch -> Rsearch\nvar mapStateToProps=function mapStateToProps(state){return{obj:state.ReducerSearch};};//Funcion que instancia la funcion distpatch la cual recibe el valor que le permite al distpache \n//identificar la accion a realizar sobre el store\nvar mapDispatchToProps=function mapDispatchToProps(dispatch){return{clearProducts:function clearProducts(type){dispatch({type:type});}};};//connectamos al redux los metodos instanciados.\nexport default connect(mapStateToProps,mapDispatchToProps)(ProductList);","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/test_ml/src/canvan/ProductList.js"],"names":["React","Component","CardBody","CardImg","Row","Col","Container","Header","Breadcrumbs","Footer","Shipping","CurrencyFormat","connect","ProductList","props","cardProduct","bind","id","clearProducts","history","push","pathname","obj","products","productCall","query","items","length","result","pos","img","size","offset","state","desc","line","price","freeShipping","forEach","val","Math","round","amount","free_shipping","picture","title","value","condition","mapStateToProps","ReducerSearch","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {CardBody, CardImg,Row, Col, Container} from 'reactstrap';\nimport Header from './Header';\nimport Breadcrumbs from './Breadcrumbs';\nimport Footer from './Footer'\nimport Shipping from \"../assets/images/ic_shipping.png\";\nimport CurrencyFormat from 'react-currency-format';\nimport { connect } from 'react-redux';\n\n/**\n * Clase del componente ProductList \n * Encargada de gestional la visiualización del listado de productos \n */\nclass ProductList extends Component{\n\n\t/**\n\t * Constructor\n\t */\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t//Asignamos la funcion CardProduct con el contexto de la clase \n\t\tthis.cardProduct = this.cardProduct.bind(this);\n\t}\n\t\n\t/**\n\t * Funcion que es llamada para redireccionar a la ruta que carga el componente de\n\t * descripción del producto\n\t * @param {*} id El id del producto con el cual se podra cosumir la informacion del producto\n\t */\n\tproductCall(id){\n\t\t//Llamamos al distpach que limpia objeto del store que tiene información del producto\n\t\t//Eso se realiza para evitar que se muestre por unos segundos la información de un producto\n\t\t//de un producto anteriormente cargado\n\t\tthis.props.clearProducts(\"cItem\");\n\t\t//Redireccionamos a la ruta /items/ con el id del producto \n\t\tthis.props.history.push({pathname: '/items/'+id});\n\t}\n\n\t/**\n\t * Funcion que construye dinamicamente cada uno de los productos de la busqueda \n\t * esta es llamada cada vez que el objeto del store es modificado con un uno listado de productos\n\t * @param {*} obj Objeto del store\n\t */\n\tcardProduct(obj){\n\t\t//Definimos un objeto para concatenar los productos \n\t\tvar products = [];\n\t\t//Asignamos instancia a la funcion que redirecciona a la pagina de producto, esto con el contexto de la clase\n\t\tconst productCall = this.productCall.bind(this);\n\t\t//Verificamos si hay productos en el objeto actualizado del store\n\t\tif(obj.query.items && obj.query.items.length > 0){\n\t\t\t//Asignamos el contenido de los items retornados \n\t\t\tconst result = obj.query.items;\n\t\t\t//Definimos los tamaños y posiciones que se utlizaran en la maquetación \n\t\t\tconst pos = {img:{size:2, offset:1} , state:{size:2}, desc:{size:6}, line:{size:10, offset:1}}\n\t\t\t//Definimos variables que seran utilizadas y recalculadas en cada uno de los items \n\t\t\tvar price;\n\t\t\tvar freeShipping;\n\t\t\t//Recorremos todos los items de productos retornados\n\t\t\tresult.forEach(val => {\n\t\t\t\t//Calculamos el precio redondeando este evitando decimales \n\t\t\t\tprice = Math.round(val.price.amount, -1);\n\t\t\t\t//En la variable cargamos la imagen de freeshipping si esta es verdadera\n\t\t\t\tfreeShipping = (val.free_shipping)?(<div className=\"shipping\"><CardImg width='100%' src={Shipping}/></div>):\"\";\n\t\t\t\t//Asignamos al objeto el item con los valores del store\n\t\t\t\tproducts.push(\n\t\t\t\t\t<div key={val.id}>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col md={pos.img} className=\"prodLCol1\">\n\t\t\t\t\t\t\t\t<Container fluid={true}>\n\t\t\t\t\t\t\t\t\t<img src={val.picture} className=\"mx-auto d-block\" alt={val.title} onClick={() => productCall(val.id)}/>\n\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col md={pos.desc} className=\"prodLCol2\">\n\t\t\t\t\t\t\t\t<Container fluid={true}>\n\t\t\t\t\t\t\t\t\t<div className=\"price\" onClick={() => productCall(val.id)}>\n\t\t\t\t\t\t\t\t\t\t<CurrencyFormat value={price} displayType={'text'} thousandSeparator={\".\"} decimalSeparator={\",\"} prefix={'$ '} renderText={value => value} /> \n\t\t\t\t\t\t\t\t\t\t{freeShipping}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"info\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"title\">{val.title}</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"condition\">{val.condition}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col md={pos.state} className=\"prodLCol3\">\n\t\t\t\t\t\t\t\t<Container fluid={true}>\n\t\t\t\t\t\t\t\t\t<div className=\"state\">{val.state}</div>\n\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col md={pos.line}>\n\t\t\t\t\t\t\t\t<Container fluid={true} className=\"bg-white\">\n\t\t\t\t\t\t\t\t\t<div className=\"line\"></div>\n\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t});\n\t\t}else{\n\t\t\t//Si no hay items retornados en la consulta cargamos un contenedor por defecto en blanco\n\t\t\tproducts.push(\n\t\t\t\t<Row key=\"0\" className=\"prodNull\">\n\t\t\t\t\t<Col className=\"h-100 d-table no-gutter\"></Col>\n\t\t\t\t</Row>\n\t\t\t);\n\t\t}\n\t\t//Retornamos todos los productos concatenados \n\t\treturn products;\n\t}\n\n\t//Renderizamos el resultado del componente, este componente consume los siguientes compoentes externos\n\t//Header: Compoente que se encarga del buscargdor, pasamos los props ya que seran utilizados \n\t//BreadCrumbs: Se encarga de la miga de pan aunque en este test se visializa un dumy \n\t//Footer: Componente que se encarga del pie de la pagina \n\t//Para renderizar los productos utilizamos la llamada a la funcion cardProduct la cual esta definida en el\n\t//constructor con el contexto, esta al tener la referencia al objeto store hara que cada vez que se actualiza\n\t//el store dispare la llamada al metodo, generando un nuevo renderizado. \n\trender(){\n\t\treturn(\n                <Container fluid={true} className=\"p-0 bg-light\">\n\t\t\t\t\t<Header {...this.props}/>\n                    <Breadcrumbs/>\n\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t{this.cardProduct(this.props.obj)}\n\t\t\t\t\t</CardBody>\n                    <Footer/>\n                </Container>\n\t\t)\t\n\t}\n}\n\n//Funcion que conecta al store a travez del reducer \n//obj es cargado a las props y permite acceder a los datos gestionados por el distpacher ReducerSearch -> Rsearch\nconst mapStateToProps = (state) => {\n    return{\n        obj:state.ReducerSearch,\n    }\n}\n\n//Funcion que instancia la funcion distpatch la cual recibe el valor que le permite al distpache \n//identificar la accion a realizar sobre el store\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n        clearProducts:(type) => {\n            dispatch({type});\n        }\n    }\n}\n\n//connectamos al redux los metodos instanciados.\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);"]},"metadata":{},"sourceType":"module"}