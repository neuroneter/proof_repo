{"ast":null,"code":"var UrlItems = \"http://localhost:5567/api/items?q=\";\nvar UrlItem = \"http://localhost:5567/api/items/\";\n\nfunction getProducts(dispatch, type, textFind) {\n  var queryUrl = UrlItems + textFind;\n  apiCall(queryUrl, dispatch, type);\n}\n\nfunction getProduct(dispatch, type, idFind) {\n  var queryUrl = UrlItem + idFind;\n  apiCall(queryUrl, dispatch, type);\n}\n\nfunction apiCall(queryUrl, dispatch, type) {\n  fetch(queryUrl).then(data => data.json()).then(data => {\n    dispatch({\n      type,\n      data\n    });\n  }).catch(function (error) {\n    console.log(\"Error cargando datos \" + error);\n  });\n}\n\nconst DAO = {\n  getProducts,\n  getProduct\n};\nexport default DAO;","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/test_ml/src/components/Dao.js"],"names":["UrlItems","UrlItem","getProducts","dispatch","type","textFind","queryUrl","apiCall","getProduct","idFind","fetch","then","data","json","catch","error","console","log","DAO"],"mappings":"AACA,IAAIA,QAAQ,GAAG,oCAAf;AACA,IAAIC,OAAO,GAAG,kCAAd;;AAEA,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,IAA/B,EAAqCC,QAArC,EAA8C;AAC1C,MAAIC,QAAQ,GAAGN,QAAQ,GAACK,QAAxB;AACAE,EAAAA,OAAO,CAACD,QAAD,EAAWH,QAAX,EAAqBC,IAArB,CAAP;AACH;;AAED,SAASI,UAAT,CAAoBL,QAApB,EAA8BC,IAA9B,EAAoCK,MAApC,EAA2C;AACvC,MAAIH,QAAQ,GAAGL,OAAO,GAACQ,MAAvB;AACAF,EAAAA,OAAO,CAACD,QAAD,EAAWH,QAAX,EAAqBC,IAArB,CAAP;AACH;;AAED,SAASG,OAAT,CAAiBD,QAAjB,EAA2BH,QAA3B,EAAqCC,IAArC,EAA0C;AACtCM,EAAAA,KAAK,CAACJ,QAAD,CAAL,CACCK,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMC,IAAI,IAAI;AAAET,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAF;AAAQQ,MAAAA;AAAR,KAAD,CAAR;AAAyB,GAFzC,EAGCE,KAHD,CAGO,UAAUC,KAAV,EAAiB;AAACC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BF,KAAtC;AAA8C,GAHvE;AAIH;;AAED,MAAMG,GAAG,GAAG;AAAEhB,EAAAA,WAAF;AAAeM,EAAAA;AAAf,CAAZ;AAEA,eAAeU,GAAf","sourcesContent":["\nvar UrlItems = \"http://localhost:5567/api/items?q=\";\nvar UrlItem = \"http://localhost:5567/api/items/\";\n\nfunction getProducts(dispatch, type, textFind){\n    var queryUrl = UrlItems+textFind;\n    apiCall(queryUrl, dispatch, type);\n}\n\nfunction getProduct(dispatch, type, idFind){\n    var queryUrl = UrlItem+idFind;\n    apiCall(queryUrl, dispatch, type);\n}\n\nfunction apiCall(queryUrl, dispatch, type){\n    fetch(queryUrl)\n    .then(data => data.json())\n    .then(data => { dispatch({ type, data}) })\n    .catch(function (error) {console.log(\"Error cargando datos \" + error);}); \n}\n\nconst DAO = { getProducts, getProduct }\n\nexport default DAO;"]},"metadata":{},"sourceType":"module"}