{"ast":null,"code":"var _jsxFileName = \"/Users/danielobedortegahernandez/iCloud/Documents/GitHub/test_ml/src/canvan/ProductList.js\";\nimport React, { Component } from 'react';\nimport { CardBody, CardImg, Row, Col, Container } from 'reactstrap';\nimport Header from './Header';\nimport Breadcrumbs from './Breadcrumbs';\nimport Footer from './Footer';\nimport Shipping from \"../assets/images/ic_shipping.png\";\nimport CurrencyFormat from 'react-currency-format';\nimport { connect } from 'react-redux';\n/**\n * Clase del componente ProductList \n * Encargada de gestional la visiualización del listado de productos \n */\n\nclass ProductList extends Component {\n  /**\n   * Constructor\n   */\n  constructor(props) {\n    super(props); //Asignamos la funcion CardProduct con el contexto de la clase \n\n    this.cardProduct = this.cardProduct.bind(this);\n  }\n  /**\n   * Funcion que es llamada para redireccionar a la ruta que carga el componente de\n   * descripción del producto\n   * @param {*} id El id del producto con el cual se podra cosumir la informacion del producto\n   */\n\n\n  productCall(id) {\n    //Llamamos al distpach que limpia objeto del store que tiene información del producto\n    //Eso se realiza para evitar que se muestre por unos segundos la información de un producto\n    //de un producto anteriormente cargado\n    this.props.clearProducts(\"cItem\"); //Redireccionamos a la ruta /items/ con el id del producto \n\n    this.props.history.push({\n      pathname: '/items/' + id\n    });\n  }\n  /**\n   * Funcion que construye dinamicamente cada uno de los productos de la busqueda \n   * esta es llamada cada vez que el objeto del store es modificado con un uno listado de productos\n   * @param {*} obj Objeto del store\n   */\n\n\n  cardProduct(obj) {\n    //Definimos un objeto para concatenar los productos \n    var products = []; //Asignamos instancia a la funcion que redirecciona a la pagina de producto, esto con el contexto de la clase\n\n    const productCall = this.productCall.bind(this); //Verificamos si hay productos en el objeto actualizado del store\n\n    if (obj.query.items && obj.query.items.length > 0) {\n      //Asignamos el contenido de los items retornados \n      const result = obj.query.items; //Definimos los tamaños y posiciones que se utlizaran en la maquetación \n\n      const pos = {\n        img: {\n          size: 2,\n          offset: 1\n        },\n        state: {\n          size: 2\n        },\n        desc: {\n          size: 6\n        },\n        line: {\n          size: 10,\n          offset: 1\n        }\n      }; //Definimos variables que seran utilizadas y recalculadas en cada uno de los items \n\n      var price;\n      var freeShipping; //Recorremos todos los items de productos retornados\n\n      result.forEach(val => {\n        //Calculamos el precio redondeando este evitando decimales \n        price = Math.round(val.price.amount, -1); //En la variable cargamos la imagen de freeshipping si esta es verdadera\n\n        freeShipping = val.free_shipping ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"shipping\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(CardImg, {\n          width: \"100%\",\n          src: Shipping,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 67\n          }\n        })) : \"\"; //Asignamos al objeto el item con los valores del store\n\n        products.push( /*#__PURE__*/React.createElement(\"div\", {\n          key: val.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 6\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          md: pos.img,\n          className: \"prodLCol1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 8\n          }\n        }, /*#__PURE__*/React.createElement(Container, {\n          fluid: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: val.picture,\n          className: \"mx-auto d-block\",\n          alt: val.title,\n          onClick: () => productCall(val.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 10\n          }\n        }))), /*#__PURE__*/React.createElement(Col, {\n          md: pos.desc,\n          className: \"prodLCol2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 8\n          }\n        }, /*#__PURE__*/React.createElement(Container, {\n          fluid: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"price\",\n          onClick: () => productCall(val.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 10\n          }\n        }, /*#__PURE__*/React.createElement(CurrencyFormat, {\n          value: price,\n          displayType: 'text',\n          thousandSeparator: \".\",\n          decimalSeparator: \",\",\n          prefix: '$ ',\n          renderText: value => value,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }\n        }), freeShipping), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"info\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 10\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }\n        }, val.title), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"condition\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }\n        }, val.condition)))), /*#__PURE__*/React.createElement(Col, {\n          md: pos.state,\n          className: \"prodLCol3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 8\n          }\n        }, /*#__PURE__*/React.createElement(Container, {\n          fluid: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"state\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 10\n          }\n        }, val.state)))), /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          md: pos.line,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 8\n          }\n        }, /*#__PURE__*/React.createElement(Container, {\n          fluid: true,\n          className: \"bg-white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"line\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 10\n          }\n        }))))));\n      });\n    } else {\n      //Si no hay items retornados en la consulta cargamos un contenedor por defecto en blanco\n      products.push( /*#__PURE__*/React.createElement(Row, {\n        key: \"0\",\n        className: \"prodNull\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"h-100 d-table no-gutter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 6\n        }\n      })));\n    } //Retornamos todos los productos concatenados \n\n\n    return products;\n  } //Renderizamos el resultado del componente, este componente consume los siguientes compoentes externos\n  //Header: Compoente que se encarga del buscargdor, pasamos los props ya que seran utilizados \n  //BreadCrumbs: Se encarga de la miga de pan aunque en este test se visializa un dumy \n  //Footer: Componente que se encarga del pie de la pagina \n  //Para renderizar los productos utilizamos la llamada a la funcion cardProduct la cual esta definida en el\n  //constructor con el contexto, esta al tener la referencia al objeto store hara que cada vez que se actualiza\n  //el store dispare la llamada al metodo, generando un nuevo renderizado. \n\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      className: \"p-0 bg-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(Breadcrumbs, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 6\n      }\n    }, this.cardProduct(this.props.obj)), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }));\n  }\n\n} //Funcion que conecta al store a travez del reducer \n//obj es cargado a las props y permite acceder a los datos gestionados por el distpacher ReducerSearch -> Rsearch\n\n\nconst mapStateToProps = state => {\n  return {\n    obj: state.ReducerSearch\n  };\n}; //Funcion que instancia la funcion distpatch la cual recibe el valor que le permite al distpache \n//identificar la accion a realizar sobre el store\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    clearProducts: type => {\n      dispatch({\n        type\n      });\n    }\n  };\n}; //connectamos al redux los metodos instanciados.\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/test_ml/src/canvan/ProductList.js"],"names":["React","Component","CardBody","CardImg","Row","Col","Container","Header","Breadcrumbs","Footer","Shipping","CurrencyFormat","connect","ProductList","constructor","props","cardProduct","bind","productCall","id","clearProducts","history","push","pathname","obj","products","query","items","length","result","pos","img","size","offset","state","desc","line","price","freeShipping","forEach","val","Math","round","amount","free_shipping","picture","title","value","condition","render","mapStateToProps","ReducerSearch","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {CardBody, CardImg,Row, Col, Container} from 'reactstrap';\nimport Header from './Header';\nimport Breadcrumbs from './Breadcrumbs';\nimport Footer from './Footer'\nimport Shipping from \"../assets/images/ic_shipping.png\";\nimport CurrencyFormat from 'react-currency-format';\nimport { connect } from 'react-redux';\n\n/**\n * Clase del componente ProductList \n * Encargada de gestional la visiualización del listado de productos \n */\nclass ProductList extends Component{\n\n\t/**\n\t * Constructor\n\t */\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t//Asignamos la funcion CardProduct con el contexto de la clase \n\t\tthis.cardProduct = this.cardProduct.bind(this);\n\t}\n\t\n\t/**\n\t * Funcion que es llamada para redireccionar a la ruta que carga el componente de\n\t * descripción del producto\n\t * @param {*} id El id del producto con el cual se podra cosumir la informacion del producto\n\t */\n\tproductCall(id){\n\t\t//Llamamos al distpach que limpia objeto del store que tiene información del producto\n\t\t//Eso se realiza para evitar que se muestre por unos segundos la información de un producto\n\t\t//de un producto anteriormente cargado\n\t\tthis.props.clearProducts(\"cItem\");\n\t\t//Redireccionamos a la ruta /items/ con el id del producto \n\t\tthis.props.history.push({pathname: '/items/'+id});\n\t}\n\n\t/**\n\t * Funcion que construye dinamicamente cada uno de los productos de la busqueda \n\t * esta es llamada cada vez que el objeto del store es modificado con un uno listado de productos\n\t * @param {*} obj Objeto del store\n\t */\n\tcardProduct(obj){\n\t\t//Definimos un objeto para concatenar los productos \n\t\tvar products = [];\n\t\t//Asignamos instancia a la funcion que redirecciona a la pagina de producto, esto con el contexto de la clase\n\t\tconst productCall = this.productCall.bind(this);\n\t\t//Verificamos si hay productos en el objeto actualizado del store\n\t\tif(obj.query.items && obj.query.items.length > 0){\n\t\t\t//Asignamos el contenido de los items retornados \n\t\t\tconst result = obj.query.items;\n\t\t\t//Definimos los tamaños y posiciones que se utlizaran en la maquetación \n\t\t\tconst pos = {img:{size:2, offset:1} , state:{size:2}, desc:{size:6}, line:{size:10, offset:1}}\n\t\t\t//Definimos variables que seran utilizadas y recalculadas en cada uno de los items \n\t\t\tvar price;\n\t\t\tvar freeShipping;\n\t\t\t//Recorremos todos los items de productos retornados\n\t\t\tresult.forEach(val => {\n\t\t\t\t//Calculamos el precio redondeando este evitando decimales \n\t\t\t\tprice = Math.round(val.price.amount, -1);\n\t\t\t\t//En la variable cargamos la imagen de freeshipping si esta es verdadera\n\t\t\t\tfreeShipping = (val.free_shipping)?(<div className=\"shipping\"><CardImg width='100%' src={Shipping}/></div>):\"\";\n\t\t\t\t//Asignamos al objeto el item con los valores del store\n\t\t\t\tproducts.push(\n\t\t\t\t\t<div key={val.id}>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col md={pos.img} className=\"prodLCol1\">\n\t\t\t\t\t\t\t\t<Container fluid={true}>\n\t\t\t\t\t\t\t\t\t<img src={val.picture} className=\"mx-auto d-block\" alt={val.title} onClick={() => productCall(val.id)}/>\n\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col md={pos.desc} className=\"prodLCol2\">\n\t\t\t\t\t\t\t\t<Container fluid={true}>\n\t\t\t\t\t\t\t\t\t<div className=\"price\" onClick={() => productCall(val.id)}>\n\t\t\t\t\t\t\t\t\t\t<CurrencyFormat value={price} displayType={'text'} thousandSeparator={\".\"} decimalSeparator={\",\"} prefix={'$ '} renderText={value => value} /> \n\t\t\t\t\t\t\t\t\t\t{freeShipping}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"info\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"title\">{val.title}</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"condition\">{val.condition}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col md={pos.state} className=\"prodLCol3\">\n\t\t\t\t\t\t\t\t<Container fluid={true}>\n\t\t\t\t\t\t\t\t\t<div className=\"state\">{val.state}</div>\n\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col md={pos.line}>\n\t\t\t\t\t\t\t\t<Container fluid={true} className=\"bg-white\">\n\t\t\t\t\t\t\t\t\t<div className=\"line\"></div>\n\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t});\n\t\t}else{\n\t\t\t//Si no hay items retornados en la consulta cargamos un contenedor por defecto en blanco\n\t\t\tproducts.push(\n\t\t\t\t<Row key=\"0\" className=\"prodNull\">\n\t\t\t\t\t<Col className=\"h-100 d-table no-gutter\"></Col>\n\t\t\t\t</Row>\n\t\t\t);\n\t\t}\n\t\t//Retornamos todos los productos concatenados \n\t\treturn products;\n\t}\n\n\t//Renderizamos el resultado del componente, este componente consume los siguientes compoentes externos\n\t//Header: Compoente que se encarga del buscargdor, pasamos los props ya que seran utilizados \n\t//BreadCrumbs: Se encarga de la miga de pan aunque en este test se visializa un dumy \n\t//Footer: Componente que se encarga del pie de la pagina \n\t//Para renderizar los productos utilizamos la llamada a la funcion cardProduct la cual esta definida en el\n\t//constructor con el contexto, esta al tener la referencia al objeto store hara que cada vez que se actualiza\n\t//el store dispare la llamada al metodo, generando un nuevo renderizado. \n\trender(){\n\t\treturn(\n                <Container fluid={true} className=\"p-0 bg-light\">\n\t\t\t\t\t<Header {...this.props}/>\n                    <Breadcrumbs/>\n\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t{this.cardProduct(this.props.obj)}\n\t\t\t\t\t</CardBody>\n                    <Footer/>\n                </Container>\n\t\t)\t\n\t}\n}\n\n//Funcion que conecta al store a travez del reducer \n//obj es cargado a las props y permite acceder a los datos gestionados por el distpacher ReducerSearch -> Rsearch\nconst mapStateToProps = (state) => {\n    return{\n        obj:state.ReducerSearch,\n    }\n}\n\n//Funcion que instancia la funcion distpatch la cual recibe el valor que le permite al distpache \n//identificar la accion a realizar sobre el store\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n        clearProducts:(type) => {\n            dispatch({type});\n        }\n    }\n}\n\n//connectamos al redux los metodos instanciados.\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);"]},"metadata":{},"sourceType":"module"}