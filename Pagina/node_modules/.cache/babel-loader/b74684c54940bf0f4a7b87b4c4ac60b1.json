{"ast":null,"code":"const objQuery = {\n  query: []\n}; //se pasa un estado por defecto para definicion de estructura\n\nfunction RSearch(state = objQuery, action) {\n  var NewState = Object.assign({}, state);\n\n  if (action.type === \"findProducts\") {\n    //console.log(\"llego la solicitud DbCrud dbMload\")\n    var queryUrl = \"http://localhost:5567/api/items?q=\" + action.data;\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: \"\"\n    }; // Where we're fetching data from\n\n    fetch(queryUrl).then(data => data.json()); //.then(data => { dispatch({ type: type, data: data, function:listenerFuntion }) })\n    //.catch(function (error) {console.log(\"Error cargando datos \" + error);});\n    //console.log(action.data);\n  }\n\n  return NewState;\n}\n\nconst ReducerSearch = {\n  RSearch\n};\nexport default ReducerSearch;","map":{"version":3,"sources":["/Users/danielobedortegahernandez/iCloud/Documents/GitHub/test_ml/src/components/RSearch.js"],"names":["objQuery","query","RSearch","state","action","NewState","Object","assign","type","queryUrl","data","requestOptions","method","headers","body","fetch","then","json","ReducerSearch"],"mappings":"AAAA,MAAMA,QAAQ,GAAG;AAACC,EAAAA,KAAK,EAAC;AAAP,CAAjB,C,CAEA;;AACA,SAASC,OAAT,CAAiBC,KAAK,GAAGH,QAAzB,EAAmCI,MAAnC,EAA0C;AAEtC,MAAIC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBJ,KAAjB,CAAf;;AACA,MAAGC,MAAM,CAACI,IAAP,KAAgB,cAAnB,EAAkC;AAC9B;AACA,QAAIC,QAAQ,GAAG,uCAAqCL,MAAM,CAACM,IAA3D;AAEA,UAAMC,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,KADW;AAEnBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFU;AAGnBC,MAAAA,IAAI,EAAC;AAHc,KAAvB,CAJ8B,CAU9B;;AACAC,IAAAA,KAAK,CAACN,QAAD,CAAL,CACCO,IADD,CACMN,IAAI,IAAIA,IAAI,CAACO,IAAL,EADd,EAX8B,CAa9B;AACA;AACA;AACH;;AACD,SAAOZ,QAAP;AACH;;AAED,MAAMa,aAAa,GAAG;AAAChB,EAAAA;AAAD,CAAtB;AAEA,eAAegB,aAAf","sourcesContent":["const objQuery = {query:[]}\n\n//se pasa un estado por defecto para definicion de estructura\nfunction RSearch(state = objQuery, action){\n\n    var NewState = Object.assign({},state);\n    if(action.type === \"findProducts\"){\n        //console.log(\"llego la solicitud DbCrud dbMload\")\n        var queryUrl = \"http://localhost:5567/api/items?q=\"+action.data;\n\n        const requestOptions = {\n            method: 'GET',\n            headers: { \"Content-Type\": \"application/json\"},\n            body:\"\"\n        };\n\n        // Where we're fetching data from\n        fetch(queryUrl)\n        .then(data => data.json());\n        //.then(data => { dispatch({ type: type, data: data, function:listenerFuntion }) })\n        //.catch(function (error) {console.log(\"Error cargando datos \" + error);});\n        //console.log(action.data);\n    }\n    return NewState;\n} \n\nconst ReducerSearch = {RSearch}\n\nexport default ReducerSearch;"]},"metadata":{},"sourceType":"module"}